[metadata]
name = globus-cli
version = attr: globus_cli.version.__version__
description = Globus CLI
long_description = file: README.rst
url = https://github.com/globus/globus-cli
author = Stephen Rosen
author_email = sirosen@globus.org

keywords = globus, cli, command line
classifiers =
    Development Status :: 5 - Production/Stable
    Intended Audience :: Developers
    License :: OSI Approved :: Apache Software License
    Operating System :: POSIX
    Programming Language :: Python
    Programming Language :: Python :: 3.7
    Programming Language :: Python :: 3.8
    Programming Language :: Python :: 3.9
    Programming Language :: Python :: 3.10
    Programming Language :: Python :: 3.11
    Programming Language :: Python :: 3.12

[options]
python_requires = >=3.7
install_requires =
    globus-sdk==3.34.0
    click>=8.1.4,<9
    jmespath==1.0.1
    packaging>=17.0
    typing_extensions>=4.0;python_version<"3.11"
    # these are dependencies of the SDK, but they are used directly in the CLI
    # declare them here in case the underlying lib ever changes
    requests>=2.19.1,<3.0.0
    cryptography>=3.3.1
package_dir=
    =src
packages = find:
include_package_data = true

[options.packages.find]
where=src

[options.entry_points]
console_scripts =
    globus = globus_cli:main

[options.extras_require]
test =
    coverage>=7
    pytest>=7
    pytest-xdist<3
    pytest-timeout<2
    click-type-test==0.0.5;python_version>='3.10'
    responses==0.23.3
    # loading test fixture data
    ruamel.yaml==0.17.32
    # Python 3.12 needs setuptools.
    setuptools;python_version>='3.12'

[isort]
profile = black


[flake8]  # black and isort compatible rules
exclude = .git,.tox,__pycache__,.eggs,dist,venv,.venv*,venv27,virtualenv,adoc,build
max-line-length = 88
ignore = W503,W504,E203

[flake8:local-plugins]
extension =
    CLI = globus_cli_flake8:Plugin
paths = ./src/globus_cli/


[tool:pytest]
addopts = --timeout 3
filterwarnings =
    # warnings are errors, like -Werror
    error

[scriv]
version = literal: src/globus_cli/version.py: __version__
categories = Bugfixes, Enhancements, Other
# we're using adoc, we'll produce fragments as 'md' and "fix" later
format = md
output_file = changelog.adoc
entry_title_template = {{ version }} ({{ date.strftime("%%Y-%%m-%%d") }})
